@model IEnumerable<J.Entities.Parent>

@{
    ViewBag.Title = "Index";
}

<script type="text/javascript">
    $(function () {

        //$("#Parent-search").jsearch({
        //    items: [
		//			{ Name: "小数和整数", Id: "txt_double", Type: "double" },
		//			{ Name: "范围小数和整数", Id: "txt_doubleStart", Type: "doubleRange", Brother: [{ Id: "txt_doubleEnd" }] },
		//			{ Name: "两位整数", Id: "txt_int", Type: "int", MaxLength: 2 },
		//			{ Name: "范围整数", Id: "txt_intStart", Type: "intRange", MaxLength: 3, Brother: [{ Id: "txt_intEnd", MaxLength: 4 }] },
		//			{ Name: "单个日期", Id: "txt_Time", Type: "date" },
		//			{ Name: "两个日期", Id: "date_StartTime", Type: "dateRange", Brother: [{ Id: "date_EndTime" }] },
        //            { Name: "单选按钮", Id: "btn-radio", name: "radio-hobby", Type: "radio", Value: [{ value: "羽毛球", text: "羽毛球" }, { value: "篮球", text: "篮球", selected: true }, { value: "乒乓球", text: "乒乓球" }] },
        //             { Name: "多选按钮", Id: "btn-checkbox", name: "checkbox-hobby", Type: "checkbox", Value: [{ value: "羽毛球", text: "羽毛球", selected: true }, { value: "篮球", text: "篮球", selected: true }, { value: "乒乓球", text: "乒乓球" }] },
        //            { Name: "自定义", Type: "custom", Content: "<input  id='txt_content1' name='text' type='text' >" },
		//			{ Name: "自定义2", Type: "custom", Content: "<input  id='txt_content2' name='text' type='text' >" },
		//			{ Name: "字符串", Id: "txt_Name", Type: "string", MaxLength: 5 },
        //            { Name: "单选", Id: "txt_State1", Type: "selectSingle", Value: [{ value: 0, text: "全部" }, { value: 1, text: "正常" }, { value: 2, text: "停用", selected: true }] },
		//			{ Name: "多选", Id: "txt_State", Type: "selectMultiple", Value: [{ value: 0, text: "全部" }, { value: 1, text: "正常" }, { value: 2, text: "停用" }] }

        //    ]
        //});
   
    });

</script>
<h2>Index</h2>


<div id="Parent-search"></div>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ParentTinyintBool)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GUID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ParentIntNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ParentMoney)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ParentDatetime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ParentVarchar)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ParentLongVarchar)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ParentBit)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ParentText)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ParentTinyintBool)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.GUID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ParentIntNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ParentMoney)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ParentDatetime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ParentVarchar)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ParentLongVarchar)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ParentBit)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ParentText)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
        </td>
    </tr>
}

</table>
